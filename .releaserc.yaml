branches:
  - master
plugins:
  - - "@semantic-release/commit-analyzer"
    - preset: conventionalcommits
      releaseRules:
        - breaking: true
          release: major
        - type: refactoring
          release: patch
      defaultBump: patch
  - - "@semantic-release/release-notes-generator"
    - preset: conventionalcommits
      presetConfig:
        types:
          - type: feat
            section: "New Feature(s)"
          - type: fix
            section: "Bug Fix(es)"
          - type: docs
            section: "Documentation Changes"
          - type: refactor
            section: "Code Refactor"
          - type: test
            section: "Tests"
          - type: perf
            section: "Performance Improvement(s)"
          - type: build
            section: "Build system"
          - type: refactoring
            section: "Refactoring"
  - - "@semantic-release/exec"
    - prepareCmd: |
        echo "Checking out release-staging..."
        git checkout release-staging || git checkout -b release-staging origin/release-staging || git checkout -b release-staging
        echo "Merging master into release-staging..."
        git merge origin/master
        echo "Setting next release version..."
        mvn versions:set -DnewVersion=${nextRelease.version}
        echo 'NEXT_VERSION=${nextRelease.version}' >> build.env
  - - "@semantic-release/changelog"
    - changelogFile: CHANGELOG.md
      changelogTitle: "# Changelogs"
  - - "@semantic-release/exec"
    - prepareCmd: |
        echo "Updating CHANGELOG.md..."
        # The changelog file should now reflect changes from the merge
        git add pom.xml CHANGELOG.md
        if ! git diff --cached --quiet; then
          git commit -m "chore(release): update for next version [skip ci]"
          git push origin release-staging
        else
          echo "No changes to commit."
        fi